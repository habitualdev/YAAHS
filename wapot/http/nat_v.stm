<!DOCTYPE html><!--[if lt IE 7]><html class="no-js lt-ie9 lt-ie8 lt-ie7"lang="en"><![endif]--><!--[if IE 7]><html class="no-js lt-ie9 lt-ie8"lang="en"><![endif]--><!--[if IE 8]><html class="no-js lt-ie9"lang="en"><![endif]--><!--[if gt IE 8]><!--><html lang="en"class="gt-ie8"><!--<![endif]--><!--[if IE]><html xmlns="http://www.w3.org/1999/xhtml"xmlns:v><![endif]--><head> <meta charset="utf-8"/><meta name="viewport"content="width=device-width"/> <title>Welcome to your Belkin router dashboard! </title><link rel="icon"href="/images/favicon.ico"><link rel="apple-touch-icon-precomposed"sizes="144x144"href="/images/belkin_144.png"><link rel="apple-touch-icon-precomposed"sizes="114x114"href="/images/belkin_114.png"><link rel="apple-touch-icon-precomposed"sizes="72x72"href="/images/belkin_72.png"><link rel="apple-touch-icon-precomposed"href="/images/belkin_57.png"> <link rel="stylesheet"href="/app.css"> <!--[if lt IE 9]> <link rel="stylesheet"href="/ie.css"> <![endif]--><!--[if IE]><?import namespace="v"implementation="#default#VML"?><![endif]--><script src="jquery.min.js"></script><script src="app.js"></script></head><script>var access_from=2;var PWS_ssid = "belkin.4b7";
var PWS_key = "2ae886ec";
var PWS_type = 4;
var PWS_encrType = 2;
var wps_version = 32;
var ClientIP="192.168.0.11"
var show_key=PWS_key.replace(/(?!^)./g,'&bull;');var ap_mode=0;var G_ip=G_svrip="192.168.0.116"
var wf_key=PWS_key+"";</script><script src="menu.js"></script><script src="global.js"></script><script src="main_header.js"></script><SCRIPT src="data.js"></SCRIPT><SCRIPT>var ht_isLogined=1;
var if_number=3;
var bWanConnected=1;
var bWanUseModem=0;
var wan_type=0;
var wan_ip="192.168.0.116";
var wan_subnet_mask="255.255.255.0";
var wan_gateway="192.168.0.1";
var primary_dns="192.168.0.1";
var secondary_dns="0.0.0.0";
var lan_gateway_ip="192.168.2.1";
var lan_gateway_mask="255.255.255.0";
var dhcpEnbl=1;
var wlenbl=1;
var enfirewall=1;
var r_mgnt_enabled = 1
var upnp_enable=1;
var wireless_func=1;
var wlenbl=1;
var wireless_channel=0;
var hide="0";
var w11a_enable=0;
var ipsec_func=0;
var printer_func=0;
var dhcp_client_num=3;
var dhcp_wlanclient_num=2;
var dhcp_start_ip="192.168.2.2";
var dhcp_end_ip="192.168.2.200";
var runtime_code_version="5.03.20(Dec  2 2014)";
var boot_code_version="0.12";
var wlan_mac_addr="EC:1A:59:BA:84:B7";
var lan_mac_addr="EC:1A:59:BA:84:B7";
var wan_mac_addr="EC:1A:59:BA:84:B8";
var hardware_version="01B";
var serial_number="12332GC2501799";
var model_name="F9K1002v5";
var bEncPassword=1;var eco_mode=1;
var bInetOK=1;
var gateway_lan_ip=lan_gateway_ip;
function isInteger(_s){var s=''+_s;if(s.search(/^[0-9]+$/)!=-1)
return true;else
return false;}
function Interface_T(){this.ip=new Array(4);this.mask=new Array(4);this.gateway=new Array(4);var i;for(i=0;i<4;i++)
{this.ip[i]=0;this.mask[i]=0;this.gateway[i]=0;}};function isBlank(_s){var c;var s=''+_s;for(var i=0;i<s.length;i++)
{c=s.charAt(i);if((c!=' ')&&(c!='\n')&&(c!='\t'))return false;}
return true;}
function isIncludeDQuote(_s){var c;var s=''+_s;for(var i=0;i<s.length;i++)
{c=s.charAt(i);if((c=='"'))return true;}
return false;}
function isIncludeBSlash(_s){var c;var s=''+_s;for(var i=0;i<s.length;i++)
{c=s.charAt(i);if((c=='\\'))return true;}
return false;}
function isBlank_Zero(_s){var c;var s=''+_s;for(var i=0;i<s.length;i++){c=s.charAt(i);if((c!=' ')&&(c!='\n')&&(c!='\t')&&(c!='0'))return false;}
return true;}
function isNvaliduser(_s){var j,x=0;var s=''+_s;for(var i=0;i<s.length;i++){var c=s.charAt(i);if((c=='<')||(c=='>')||(c=='&'))
{return true;}}
return false;}
function isNValidInt(_s){var c;var s=''+_s;for(var i=0;i<s.length;i++){c=s.charCodeAt(i);if((c<48)||(c>57))
return true;}
return false;}
function isNegInt(s){if(parseInt(s,10)<0)
return true;else
return false;}
function isNValidIP(_s){var s=parseInt(_s,10);if((isBlank(_s))||(isNaN(_s))||(isNValidInt(_s))||(isNegInt(_s))||(s<0||s>255))
return true;else
return false;}
function isNValidFirstIP(_s){var s=parseInt(_s,10);if((isBlank(_s))||(isNaN(_s))||(isNValidInt(_s))||(isNegInt(_s))||(s<1||s>223))
return true;else
return false;}
function isNValidLastIP(_s){var s=parseInt(_s,10);if((isBlank(_s))||(isNaN(_s))||(isNValidInt(_s))||(isNegInt(_s))||(s<1||s>254))
return true;else
return false;}
function isNValidIP_p(_s,l,u){var s=parseInt(_s,10);if(!isInteger(_s)||(s<l||s>u))
return true;else
return false;}
function isNValidMask(_s){var s=parseInt(_s,10);if(!isInteger(_s))
return true;if((s==255)||(s==254)||(s==252)||(s==248)||(s==240)||(s==224)||(s==192)||(s==128)||(s==0))
return false;return true;}
function isNValidLastMask(_s){var s=parseInt(_s,10);if(!isInteger(_s))
return true;if((s==252)||(s==248)||(s==240)||(s==224)||(s==192)||(s==128)||(s==0))
return false;return true;}
function IP2long(a1,a2,a3,a4){var iplong=Number(a1)*0x1000000+Number(a2)*0x10000+Number(a3)*0x100+Number(a4);return iplong;}
function isNValidSubnetMask(s1,s2,s3,s4){var ulMask=IP2long(s1,s2,s3,s4);var j=0;var ok=0;if(Number(s1)!=255)return 1;if(isNValidMask(s2))return 2;if(isNValidMask(s3))return 3;if(isNValidLastMask(s4))return 4;for(var i=31;i>=0;i--){j=j+Math.pow(2,i);if(ulMask==j)ok=1;}
return(ok)?0:1;return false;}
function isNValidPortAllowZero(_s){var s=parseInt(_s,10);if((isBlank(''+_s))||(isNaN(''+_s))||(isNValidInt(s))||(isNegInt(s))||(s<0||s>65535))
return true;else
return false;}
function is2Hex(_s){var j,x=0;var s=''+_s;for(var i=0;i<s.length;i++){var c=s.charAt(i);j=parseInt(c,16);if((j>=0)&&(j<16)){if(x==1)
return false;x=1;}}
return true;}
function isHex(_s){var j,x=0;var s=''+_s;for(var i=0;i<s.length;i++){var c=s.charAt(i);j=parseInt(c,16);if(!((j==0)||(j==1)||(j==2)||(j==3)||(j==4)||(j==5)||(j==6)||(j==7)||(j==8)||(j==9)||(j==10)||(j==11)||(j==12)||(j==13)||(j==14)||(j==15))){x=1;}
if(x==1)return false;}
return true;}
function isNValid(s){if(isBlank(s)||is2Hex(s))
return true;else
return false;}
function isValidMacAddress(address){var c='';var i=0,j=0;if(address.toUpperCase()=='FF:FF:FF:FF:FF:FF')return 1;if(address=='00:00:00:00:00:00'||address=='0:0:0:0:0:0')return 1;addrParts=address.split(':');if(addrParts.length!=6)return 1;for(i=0;i<6;i++){if(addrParts[i].length!=2)return(i+1);for(j=0;j<addrParts[i].length;j++){c=addrParts[i].toLowerCase().charAt(j);if((c>='0'&&c<='9')||(c>='a'&&c<='f'))
continue;else
return(i+1);}}
return 0;}
function isNValidNum(_s){var s=parseInt(_s,10);if((isBlank(''+_s))||(isNaN(''+_s))||(isNValidInt(s))||(isNegInt(s)))
return true;else
return false;}
function isNValidUnicastIP(_s){var s=parseInt(_s,10);if((isBlank(''+_s))||(isNaN(''+_s))||(isNValidInt(s))||(isNegInt(s))||(s<=0||s>=224))
return true;else
return false;}
function isValidIP(addr,_nobypass){var sub_addr;var net_id;var host_id;var nobypass=_nobypass;if(addr.search(/^\d{1,3}\.\d{1,3}\.\d{1,3}\./)==-1)
return false;sub_addr=addr.split(/\./);if(sub_addr.length!=4)return false;if(sub_addr[3]=="*")
sub_addr[3]="1";else
{if(isNaN(sub_addr[3])==true)return false;}
if(sub_addr[0]>0xff||sub_addr[1]>0xff||sub_addr[2]>0xff||sub_addr[3]>0xff)
return false;if(sub_addr[0]<128){if(sub_addr[0]==0||sub_addr[0]==127)
return false;host_id=sub_addr[1]*0x10000+sub_addr[2]*0x100+sub_addr[3]*0x1;if(!nobypass&&(host_id==0||host_id==0xffffff))
return false;}else if(sub_addr[0]<192){host_id=sub_addr[2]*0x100+sub_addr[3]*0x1;if(!nobypass&&(host_id==0||host_id==0xffff))
return false;}else if(sub_addr[0]<224){host_id=sub_addr[3]*0x1;if(!nobypass&&(host_id==0||host_id==0xff))
return false;}else{return false;}
return true;}
function isValidIPAddress3(_a1,_a2,_a3,_a4,_m1,_m2,_m3,_m4){var a1=''+_a1;var a2=''+_a2;var a3=''+_a3;var a4=''+_a4;var m1=''+_m1;var m2=''+_m2;var m3=''+_m3;var m4=''+_m4;var net_id;var host_id;if(isNValidIP(a1)==true)return 1;if(isNValidIP(a2)==true)return 2;if(isNValidIP(a3)==true)return 3;if(isNValidIP(a4)==true)return 4;net_id=IP2long(m1,m2,m3,m4);host_id=IP2long(a1,a2,a3,a4);if((host_id|net_id)==-1){return 4;}
if((host_id&net_id)==host_id){return 4;}
return 0;}
function isPrintable(_s,_lt){var c,len=_s.length-1;for(var i=0;i<=len;i++){c=_s.charCodeAt(i);if((c<32)||(c>126))return false;if(!_lt){if((i==0)&&(c==32))return false;if((i==len)&&(c==32))return false;}}
return true;}
function isNVaidSSIDChar(s){return!isPrintable(s,0);}
function isNVaidWPAChar(s){return!isPrintable(s,1);}
function isNLocalDomain(s){return!isPrintable(s,1);}
function isNHostName(s){return!isPrintable(s,1);}
function isNPPPoEname(s){return!isPrintable(s,1);}
function isNPPPoEpasswd(s){return!isPrintable(s,1);}
function isNPPPoEserver(s){return!isPrintable(s,1);}var ipm='IP is out of range in [1-254]! ';var sm='The number in port entry box should be between 1 - 65535.';function parseValueRangeBoth(valueL,valueW,index)
{var sub_valueL,rangeL,sub_rangeL;var sub_valueW,rangeW,sub_rangeW;var i;var value1,value2;if(valueL==null||valueL.length==0||valueW==null||valueW.length==0)
return true;sub_valueL=valueL.split(/\,/);rangeL=new Array(sub_valueL.length);for(i=0;i<sub_valueL.length;i++)
{rangeL[i]=new PORT_RANGE();sub_rangeL=sub_valueL[i].split(/\-/);if(sub_rangeL.length==1)
{return true;}
else if(sub_rangeL.length==2)
{if(isNaN(sub_rangeL[0])==false&&sub_rangeL[1]=='*')
{value1=new Number(sub_rangeL[0]);rangeL[i].b_port=sub_rangeL[0];rangeL[i].e_port=65535;}
else
{if(isNaN(sub_rangeL[0])==true||isNaN(sub_rangeL[1])==true)
return true;value1=new Number(sub_rangeL[0]);value2=new Number(sub_rangeL[1]);if(value1.valueOf()>value2.valueOf())
{rangeL[i].b_port=sub_rangeL[1];rangeL[i].e_port=sub_rangeL[0];}
else
{rangeL[i].b_port=sub_rangeL[0];rangeL[i].e_port=sub_rangeL[1];}}}
else
return true;}
sub_valueW=valueW.split(/\,/);rangeW=new Array(sub_valueW.length);if(sub_valueL.length!=sub_valueW.length)
return true;for(i=0;i<sub_valueW.length;i++)
{rangeW[i]=new PORT_RANGE();sub_rangeW=sub_valueW[i].split(/\-/);if(sub_rangeW.length==1)
{return true;}
else if(sub_rangeW.length==2)
{if(isNaN(sub_rangeW[0])==false&&sub_rangeW[1]=='*')
{value1=new Number(sub_rangeW[0]);rangeW[i].b_port=sub_rangeW[0];rangeW[i].e_port=65535;}
else
{if(isNaN(sub_rangeW[0])==true||isNaN(sub_rangeW[1])==true)
return true;value1=new Number(sub_rangeW[0]);value2=new Number(sub_rangeW[1]);if(value1.valueOf()>value2.valueOf())
{rangeW[i].b_port=sub_rangeW[1];rangeW[i].e_port=sub_rangeW[0];}
else
{rangeW[i].b_port=sub_rangeW[0];rangeW[i].e_port=sub_rangeW[1];}}}
else
return true;}
if(rangeL.length!=rangeW.length)
return true;for(i=0;i<rangeL.length;i++)
{if((rangeL[i].b_port<=0||rangeL[i].b_port>65535)||(rangeL[i].e_port<=0||rangeL[i].e_port>65535)||(parseInt(rangeL[i].b_port)!=rangeL[i].b_port)||(parseInt(rangeL[i].e_port)!=rangeL[i].e_port))
{alert("NO"+(index+1)+" "+"The number in port entry box should be between 1 - 65535.");return false;}
if((rangeW[i].b_port<=0||rangeW[i].b_port>65535)||(rangeW[i].e_port<=0||rangeW[i].e_port>65535)||(parseInt(rangeL[i].b_port)!=rangeL[i].b_port)||(parseInt(rangeL[i].e_port)!=rangeL[i].e_port))
{alert("NO"+(index+1)+" "+"The number in port entry box should be between 1 - 65535.");return false;}
if((rangeL[i].e_port-rangeL[i].b_port)!=(rangeW[i].e_port-rangeW[i].b_port))
{alert("NO"+(index+1)+" "+"Port is invalid! ");return false;}}
return true;}
function VerifyVSEntry(index)
{var field_name,field_index,field_index1;var protocol_type,protocol;var sub_string;var sub_value,sub_value1;var i,j;if(index<0&&index>=VIRTUAL_SERVER_NUMBER_PER_INTERFACE)
return true;field_name="protocol"+index;field_index=getElementsByFieldName(document.tF1,field_name);protocol_type=document.tF1.elements[field_index].options[document.tF1.elements[field_index].selectedIndex].value;sub_string=document.getElementsByName("wan_ip"+index);if(sub_string==null)
{alert("No"+(index+1)+"."+"WAN IP Address is invalid!	");return false;}
field_name="lan_ip"+index;field_index=getElementsByFieldName(document.tF1,field_name);sub_string=parseIPValueRange(document.tF1.elements[field_index].value);if(isNValidLastIP(document.tF1.elements[field_index].value))
{alert("No"+(index+1)+"."+" Private IP address  is invalid, please correct it first! ");return false;}
if((document.tF1.lan_ip_prefix.value+document.tF1.elements[field_index].value)==gateway_lan_ip)
{alert("No"+(index+1)+"."+"LAN IP Address is invalid!	");return false;}
if(protocol_type==both_proto)
protocol=tcp_proto;else
protocol=protocol_type;field_name="lan_port"+index;field_index1=getElementsByFieldName(document.tF1,field_name);field_name="wan_port"+index;field_index=getElementsByFieldName(document.tF1,field_name);if(parseValueRangeBoth(document.tF1.elements[field_index1].value,document.tF1.elements[field_index].value,index)==false)
return false;sub_string=parseValueRange(document.tF1.elements[field_index].value);sub_value=parsePortValueRange(document.tF1.elements[field_index].value);sub_value1=parsePortValueRange(document.tF1.elements[field_index1].value);if(sub_string==null||sub_value==null||sub_value1==null)
{alert("No"+(index+1)+"."+"Port is invalid! ");return false;}
j=0;for(i=0;i<sub_string.length;i++)
{if((parseInt(sub_string[i].b_port)<=0||parseInt(sub_string[i].b_port)>65535)||(parseInt(sub_string[i].e_port)<=0||parseInt(sub_string[i].e_port)>65535)||(parseInt(sub_string[i].b_port)!=sub_string[i].b_port)||(parseInt(sub_string[i].e_port)!=sub_string[i].e_port)){alert("No"+(index+1)+"."+"Invalid number! Must between 1..65535.");return false;}
if(parseInt(sub_value[i].b_port)>parseInt(sub_value[i].e_port)){alert("No"+(index+1)+"."+"The Inbound port range is not correct.");return false;}
j++;}
if(protocol_type==both_proto)
{protocol=udp_proto;}
field_name="service_name"+index;field_index=getElementsByFieldName(document.tF1,field_name);if(document.tF1.elements[field_index].value==''){alert('No'+(index+1)+'.'+'Description is empty. .');return false;}
if(protocol_type==both_proto)
protocol=tcp_proto;else
protocol=protocol_type;field_name="lan_port"+index;field_index=getElementsByFieldName(document.tF1,field_name);sub_string=parseValueRange(document.tF1.elements[field_index].value);sub_value=parsePortValueRange(document.tF1.elements[field_index].value);if(sub_string==null)
{alert("No"+(index+1)+"."+"Invalid number! Must between 1..65535.");return false;}
j=0;for(i=0;i<sub_string.length;i++)
{if((sub_string[i].b_port<=0||sub_string[i].b_port>65535)||(sub_string[i].e_port<=0||sub_string[i].e_port>65535)||(parseInt(sub_string[i].b_port)!=sub_string[i].b_port)||(parseInt(sub_string[i].e_port)!=sub_string[i].e_port)){alert("No"+(index+1)+"."+"Invalid number! Must between 1..65535.");return false;}
if(sub_value[i].b_port>sub_value[i].e_port){alert("No"+(index+1)+"."+"The Private port range is not correct.");return false;}
j++;}
if(protocol_type==both_proto)
{protocol=udp_proto;}
for(var i=0;i<VIRTUAL_SERVER_NUMBER_PER_INTERFACE;i++)
{for(var j=i+1;j<VIRTUAL_SERVER_NUMBER_PER_INTERFACE;j++)
{var p1,p2,proto1,proto2,ip1,ip2;p1=document.tF1["wan_port"+i].value;p2=document.tF1["wan_port"+j].value;proto1=document.tF1["protocol"+i].value;proto2=document.tF1["protocol"+j].value;if(p1!=""&&p2!=""&&p1==p2&&(proto1==proto2||proto1==255||proto2==255))
{name1=document.tF1["service_name"+i].value;name2=document.tF1["service_name"+j].value;alert(""+name1+" ("+p1+")"+" <--> "+name2+" ("+p2+")");return false;}
p1=document.tF1["lan_port"+i].value;p2=document.tF1["lan_port"+j].value;ip1=document.tF1["lan_ip"+i].value;ip2=document.tF1["lan_ip"+j].value;if(p1!=""&&p2!=""&&p1==p2&&(proto1==proto2||proto1==255||proto2==255)&&ip1==ip2)
{name1=document.tF1["service_name"+i].value;name2=document.tF1["service_name"+j].value;alert(""+name1+" ("+p1+")"+" <--> "+name2+" ("+p2+")");return false;}}}
return true;}
function emptyvalue(index)
{var field_name,field_name1,field_name2,field_name3;var field_index,field_index1,field_index2,field_index3;var protocol_type,protocol;var sub_string;var sub_value;var i,j;field_name="service_name"+index;field_index=getElementsByFieldName(document.tF1,field_name);field_name1="lan_ip"+index;field_index1=getElementsByFieldName(document.tF1,field_name1);field_name2="lan_port"+index;field_index2=getElementsByFieldName(document.tF1,field_name2);field_name3="wan_port"+index;field_index3=getElementsByFieldName(document.tF1,field_name3);if((document.tF1.elements[field_index].value=='')&&(document.tF1.elements[field_index1].value=='')&&(document.tF1.elements[field_index2].value=='')&&(document.tF1.elements[field_index3].value=='')){return true;}else{return false;}}
function evaltF()
{var counterflag=0;document.tF1.lan_ip_prefix.value=lanip_oct1+'.'+lanip_oct2+'.'+lanip_oct3+'.';for(index=0;index<VIRTUAL_SERVER_NUMBER_PER_INTERFACE;index++)
{if((emptyvalue(index)==true)&&(emptyentry(index)==true)){counterflag++;}
else{if(VerifyVSEntry(index)==false)
return false;}}
document.tF1.op_mode.value="apply";return subForm(document.tF1,cPage,'SYS_BOOT',REBOOT_WAIT);}
function VIRTUAL_SERVER_ENTRY()
{var i;this.index=-1;this.enable=0;this.protocol=0;this.ip_count=0;this.ip=new Array(IP_MAX);for(i=0;i<IP_MAX;i++)
this.ip[i]=new IP_RANGE();this.lan_ip="";this.service_name="";this.port_count=0;this.port=new Array(PORT_MAX);for(i=0;i<PORT_MAX;i++)
this.port[i]=new PORT_RANGE();this.lan_port_count=0;this.lan_port=new Array(PORT_MAX);for(i=0;i<PORT_MAX;i++)
this.lan_port[i]=new PORT_RANGE();};function VIRTUAL_SERVER_TABLE()
{var i;this.interface_num=0;this.count=0;this.entry=new Array(VIRTUAL_SERVER_NUMBER_PER_INTERFACE);for(i=0;i<VIRTUAL_SERVER_NUMBER_PER_INTERFACE;i++)
this.entry[i]=new VIRTUAL_SERVER_ENTRY();}
var VIRTUAL_SERVER=new VIRTUAL_SERVER_TABLE();var lanip_oct1,lanip_oct2,lanip_oct3;virtual_server_MAX_NUM=141;var virtual_server=new Array(virtual_server_MAX_NUM);virtual_server[0]=new ObjVirServer("Active Worlds",4);function ObjVirServer(name,entry_num)
{this.name=name;this.entry_num=entry_num;this.entry=new Array(6);}
function ObjVirtualServer(name,enable,service_name,wan_port_low,wan_port_high,type,lan_ip,lan_port_low,lan_port_high)
{this.name=name;this.enable=enable;this.service_name=service_name;this.wan_port_low=wan_port_low;this.wan_port_high=wan_port_high;this.type=type;this.lan_ip=lan_ip;this.lan_port_low=lan_port_low;this.lan_port_high=lan_port_high;}
function clearCall(index)
{index=index-1;if(index<0&&index>VIRTUAL_SERVER_NUMBER_PER_INTERFACE)
return;eval('document.tF1.lan_ip'+index).value="";eval('document.tF1.service_name'+index).value="";eval('document.tF1.protocol'+index).options[0].selected=true;eval('document.tF1.lan_port'+index).value="";eval('document.tF1.wan_port'+index).value="";eval('document.tF1.enable'+index).checked=false;}
function ClearEntry(entry)
{var index;if(entry=='all')
{if(confirm("Do you want to clear all entries?"))
{var count=0;for(i=1;i<VIRTUAL_SERVER_NUMBER_PER_INTERFACE+1;i++)
{count=i;count=count+'';clearCall(count);}
return true;}}
else
{if(confirm("Do you want to clear entry"+entry+"?")){clearCall(entry);return true;}}}
function emptyentry(count)
{if((eval('document.tF1.enable'+count).checked==false))
return true;else
return false;}
function EntryCount()
{var ret_entry=0;var count=0;var i=0;for(i=0;i<VIRTUAL_SERVER_NUMBER_PER_INTERFACE;i++)
{count=i;count=count+'';if((emptyentry(count)==true)&&(emptyvalue(i)==true))
{ret_entry++;}}
return ret_entry;}
function GetEmptyEntry()
{var ret_entry=0;var count=0;var i=0;for(i=0;i<VIRTUAL_SERVER_NUMBER_PER_INTERFACE;i++)
{count=i;count=count+'';if((emptyentry(count)==true)&&(emptyvalue(i)==true))
{ret_entry=i;return ret_entry;}}
alert("All entries are full.\nPlease remove some entries then try again.");return ret_entry;}
function addvirtsvr(c,i,j)
{var count=c;count=count+'';eval('document.tF1.lan_ip'+count).value=virtual_server[i].entry[j].lan_ip;eval('document.tF1.service_name'+count).value=virtual_server[i].entry[j].service_name;if(virtual_server[i].entry[j].type=="TCP")
eval('document.tF1.protocol'+count).options[0].selected=true;else if(virtual_server[i].entry[j].type=="UDP")
eval('document.tF1.protocol'+count).options[1].selected=true;else if(virtual_server[i].entry[j].type=="TCP&UDP")
eval('document.tF1.protocol'+count).options[2].selected=true;if(virtual_server[i].entry[j].lan_port_low==virtual_server[i].entry[j].lan_port_high)
eval('document.tF1.lan_port'+count).value=virtual_server[i].entry[j].lan_port_low;else
eval('document.tF1.lan_port'+count).value=virtual_server[i].entry[j].lan_port_low+"-"+virtual_server[i].entry[j].lan_port_high;if(virtual_server[i].entry[j].wan_port_low==virtual_server[i].entry[j].wan_port_high)
eval('document.tF1.wan_port'+count).value=virtual_server[i].entry[j].wan_port_low;else
eval('document.tF1.wan_port'+count).value=virtual_server[i].entry[j].wan_port_low+"-"+virtual_server[i].entry[j].wan_port_high;eval('document.tF1.enable'+count).checked=virtual_server[i].entry[j].enable;}
function AddVirtualServer(server_name)
{var i=0;var j=0;var k=0;var field_name,field_index;var service_name;for(k=0;k<VIRTUAL_SERVER_NUMBER_PER_INTERFACE;k++){field_name="service_name"+k;field_index=getElementsByFieldName(document.tF1,field_name);service_name=document.tF1.elements[field_index].value;if((service_name!='')&&(service_name==server_name)){alert(" The service name have existed. ");return false;}else
continue;}
for(i=0;i<virtual_server_MAX_NUM;i++)
{if(virtual_server[i].name==server_name)
{var entry_num=virtual_server[i].entry_num;var empty_entry;empty_entry=EntryCount();if(empty_entry<entry_num)
{alert("All entries are full.\nPlease remove some entries then try again.");return;}
for(j=0;j<entry_num;j++)
{empty_entry=GetEmptyEntry();addvirtsvr(empty_entry,i,j);}}}}
function ModifyVirtualServer(index)
{if(index<0&&index>=VIRTUAL_SERVER_NUMBER_PER_INTERFACE)
return;var field_name,field_index,field_index1;var protocol_type,protocol;var sub_string;var i,j;document.tF1.index.value=index;field_name="enable"+index;field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.enable.value=trueValueToInt(document.tF1.elements[field_index].checked);field_name="protocol"+index;field_index=getElementsByFieldName(document.tF1,field_name);protocol_type=document.tF1.elements[field_index].options[document.tF1.elements[field_index].selectedIndex].value;field_name="wan_ip"+index;field_index=getElementsByFieldName(document.tF1,field_name);sub_string=parseIPValueRange(document.tF1.elements[field_index].value);if(sub_string==null)
{alert("WAN IP Address error");return;}
for(i=0;i<sub_string.length;i++)
{field_name="ip"+i;field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string[i].ip;field_name="ip_count"+i;field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string[i].count;}
document.tF1.ip_range_count.value=sub_string.length;if(protocol_type==both_proto)
protocol=tcp_proto;else
protocol=protocol_type;field_name="lan_port"+index;field_index1=getElementsByFieldName(document.tF1,field_name);field_name="wan_port"+index;field_index=getElementsByFieldName(document.tF1,field_name);if(parseValueRangeBoth(document.tF1.elements[field_index1].value,document.tF1.elements[field_index].value)==false)
return;sub_string=parseValueRange(document.tF1.elements[field_index].value);if(sub_string==null)
{alert("WAN Port error");return;}
j=0;for(i=0;i<sub_string.length;i++)
{if((sub_string[i].b_port<=0||sub_string[i].b_port>65535)||(sub_string[i].e_port<=0||sub_string[i].e_port>65535)){alert("The Inbound port range is not correct.");return;}
field_name="protocol"+i;field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=protocol;field_name="b_port"+i;field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string[i].b_port;field_name="e_port"+i;field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string[i].e_port;j++;}
if(protocol_type==both_proto)
{protocol=udp_proto;for(i=0;i<sub_string.length;i++)
{field_name="protocol"+(i+j);field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=protocol;field_name="b_port"+(i+j);field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string[i].b_port;field_name="e_port"+(i+j);field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string[i].e_port;}
j=j+i;}
document.tF1.port_range_count.value=j;field_name="lan_ip"+index;field_index=getElementsByFieldName(document.tF1,field_name);if(isNValidLastIP(document.tF1.elements[field_index].value))
{alert(""+"Connecting");return;}
sub_string=document.tF1.elements[field_index].value;field_name="lan_ip";field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=lanip_oct1+'.'+lanip_oct2+'.'+lanip_oct3+'.'+sub_string;field_name="service_name"+index;field_index=getElementsByFieldName(document.tF1,field_name);sub_string=document.tF1.elements[field_index].value;field_name="service_name";field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string;if(protocol_type==both_proto)
protocol=tcp_proto;else
protocol=protocol_type;field_name="lan_port"+index;field_index=getElementsByFieldName(document.tF1,field_name);sub_string=parseValueRange(document.tF1.elements[field_index].value);if(sub_string==null)
{alert("LAN Port error");return;}
j=0;for(i=0;i<sub_string.length;i++)
{if((sub_string[i].b_port<=0||sub_string[i].b_port>65535)||(sub_string[i].e_port<=0||sub_string[i].e_port>65535)){alert("The Private port range is not correct.");return;}
field_name="lan_protocol"+i;field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=protocol;field_name="lan_b_port"+i;field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string[i].b_port;field_name="lan_e_port"+i;field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string[i].e_port;j++;}
if(protocol_type==both_proto)
{protocol=udp_proto;for(i=0;i<sub_string.length;i++)
{field_name="lan_protocol"+(i+j);field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=protocol;field_name="lan_b_port"+(i+j);field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string[i].b_port;field_name="lan_e_port"+(i+j);field_index=getElementsByFieldName(document.tF1,field_name);document.tF1.elements[field_index].value=sub_string[i].e_port;j++;}}
document.tF1.lan_port_range_count.value=j;document.tF1.op_mode.value="modify";document.tF1.submit();}
function ClearVirtualServer(index)
{if(index<0&&index>=VIRTUAL_SERVER_NUMBER_PER_INTERFACE)
return;document.tF1.index.value=index;document.tF1.op_mode.value="delete";document.tF1.submit();}
function moreinfowin(flagip){var win=window.open(flagip,'help','toolbar=0,status=0,menubar=0,scrollbars=1,resizable=1,width=530,height=400,left=150,top=150');win.focus();}</SCRIPT><SCRIPT language=JavaScript>
nInterface = 608;
lanip_oct1 = 192; lanip_oct2 = 168; lanip_oct3 = 2; 
VIRTUAL_SERVER.entry[0].index = 0;
VIRTUAL_SERVER.entry[0].enable = 0;
VIRTUAL_SERVER.entry[0].protocol = 6;
VIRTUAL_SERVER.entry[0].lan_ip = "192.168.2.4";
VIRTUAL_SERVER.entry[0].service_name = "ssh";
VIRTUAL_SERVER.entry[0].ip[0].ip = "0.0.0.0";
VIRTUAL_SERVER.entry[0].ip[0].count = 1;
VIRTUAL_SERVER.ip_count = 1;
VIRTUAL_SERVER.entry[0].port[0].protocol = 6;
VIRTUAL_SERVER.entry[0].port[0].b_port = 22;
VIRTUAL_SERVER.entry[0].port[0].e_port = 22;
VIRTUAL_SERVER.port_count = 1;
VIRTUAL_SERVER.entry[0].lan_port[0].protocol = 6;
VIRTUAL_SERVER.entry[0].lan_port[0].b_port = 22;
VIRTUAL_SERVER.entry[0].lan_port[0].e_port = 22;
VIRTUAL_SERVER.lan_port_count = 1;
</SCRIPT>
<div class="main container"> <div class="row"><div class="eight columns"><form class="nice"name="tF1"method="post"action="/cgi-bin/setup_virtualserver.exe"target="OUTfrm"> <input type="hidden"name="restart_time"value="0"> <input type="hidden"name="reload"value="0"> <input type="hidden"name="restart_page"value=""> <input type="hidden"name="location_page"value="nat_v.stm"> <input type="hidden"name="op_mode"value=""> <input type="hidden"name="interface_num"value="7"> <input type="hidden"name="index"value="0"> <input type="hidden"name="protocol"value="0"> <input type="hidden"name="enable"value="0"> <input type="hidden"name="lan_ip"value="0"> <input type="hidden"name="service_name"value=""> <input type="hidden"name="ip_range_count"value=""> <input type="hidden"name="port_range_count"value=""> <input type="hidden"name="lan_port_range_count"value=""> <SCRIPT language=JavaScript>var i;for(i=0;i<IP_MAX;i++)
{document.writeln('<input type="hidden" name="ip',i,'" value="">');document.writeln('<input type="hidden" name="ip_count',i,'" value="">');}
for(i=0;i<PORT_MAX;i++)
{document.writeln('<input type="hidden" name="b_port',i,'" value="">');document.writeln('<input type="hidden" name="e_port',i,'" value="">');document.writeln('<input type="hidden" name="lan_protocol',i,'" value="">');document.writeln('<input type="hidden" name="lan_b_port',i,'" value="">');document.writeln('<input type="hidden" name="lan_e_port',i,'" value="">');}</script> <input type="hidden"name="restart_time"value="0"> <input type="hidden"name="reload"value="0"> <input type="hidden"name="restart_page"value=""> <input type="hidden"name="location_page"value="nat_v.stm"> <input type="hidden"name="interface_num"value="7"> <input type="hidden"name="lan_ip_prefix"value="0"><div class="row"> <div class="twelve columns"><br><br><p class="drop-ip"> <span><b><span>Clear entry</span>&nbsp;</b> <span> <select name="clear_entry_list"> <script>for(var i=1;i<=VIRTUAL_SERVER_NUMBER_PER_INTERFACE;i++)
document.write('<option value='+i+'>'+i+'</option>');</script> <option value='all'>all</option></select> </span>&nbsp;&nbsp; <a href="#clear"class="nice radius small white button margin-rows"onClick="return ClearEntry(document.tF1.clear_entry_list.value)">Clear</a>&nbsp;&nbsp; </span> </p><p class="drop-ip"> <div id="div_tb"> <table id="tb_vs_list"width="80%"class="minimal"> <thead> <tr> <th colspan="1"><b><font>On</font></b></th> <th><b><font>Description</font></b></th> <th><b><font>Inbound port</font></b></th> <th><b><font>Type</font></b></th> <th width="60%"><b><font>Private IP address</font></b></th> <th><b><font>Private port</font></b></th> </tr> </thead> <tbody><script>var index;var i,j,k;var wan_ip,wan_port,lan_ip,lan_port,protocol,IP;var service_name;var sub_addr,tmp,field_name;var enable;var cur_proto=4;var bBothProto=false;for(i=0;i<VIRTUAL_SERVER_NUMBER_PER_INTERFACE;i++)
{bBothProto=false;protocol=tcp_proto;enable="";if(VIRTUAL_SERVER.entry[i].enable==1)
enable="checked";wan_ip="";k=0;for(j=0;j<IP_MAX;j++)
{if(VIRTUAL_SERVER.entry[i].ip[j].count==0)continue;if(VIRTUAL_SERVER.entry[i].ip[j].ip=="0.0.0.0")
{wan_ip="*";break;}
else
{if(k!=0)
wan_ip+=",";k++;if(VIRTUAL_SERVER.entry[i].ip[j].count==1)
{wan_ip+=VIRTUAL_SERVER.entry[i].ip[j].ip;}
else
{sub_addr=VIRTUAL_SERVER.entry[i].ip[j].ip.split(/\./);tmp=parseInt(sub_addr[3])+VIRTUAL_SERVER.entry[i].ip[j].count-1;wan_ip+=VIRTUAL_SERVER.entry[i].ip[j].ip+"-"+tmp;}}}
cur_proto=4;wan_port="";k=0;for(j=0;j<PORT_MAX;j++)
{if((VIRTUAL_SERVER.entry[i].port[j].b_port==0)&&(VIRTUAL_SERVER.entry[i].port[j].e_port==0))
continue;if(cur_proto==4)
cur_proto=VIRTUAL_SERVER.entry[i].port[j].protocol;else
{if(cur_proto!=VIRTUAL_SERVER.entry[i].port[j].protocol)
{bBothProto=true;break;}}
protocol=cur_proto;if((k!=0)&&(VIRTUAL_SERVER.entry[i].port[j].b_port!=0)&&(VIRTUAL_SERVER.entry[i].port[j].e_port!=0))
wan_port+=",";k++;if(VIRTUAL_SERVER.entry[i].port[j].b_port==VIRTUAL_SERVER.entry[i].port[j].e_port)
wan_port+=VIRTUAL_SERVER.entry[i].port[j].b_port;else
wan_port+=VIRTUAL_SERVER.entry[i].port[j].b_port+"-"+VIRTUAL_SERVER.entry[i].port[j].e_port;}
IP=VIRTUAL_SERVER.entry[i].lan_ip.split(/\./);if(IP[3])
lan_ip=new Number(IP[3]);else
lan_ip="";cur_proto=4;lan_port="";k=0;for(j=0;j<PORT_MAX;j++)
{if((VIRTUAL_SERVER.entry[i].lan_port[j].b_port==0)&&(VIRTUAL_SERVER.entry[i].lan_port[j].e_port==0))
continue;if(cur_proto==4)
cur_proto=VIRTUAL_SERVER.entry[i].lan_port[j].protocol;else
{if(cur_proto!=VIRTUAL_SERVER.entry[i].lan_port[j].protocol)
break;}
if((k!=0)&&(VIRTUAL_SERVER.entry[i].lan_port[j].b_port!=0)&&(VIRTUAL_SERVER.entry[i].lan_port[j].e_port!=0))
lan_port+=",";k++;if(VIRTUAL_SERVER.entry[i].lan_port[j].b_port==VIRTUAL_SERVER.entry[i].lan_port[j].e_port)
lan_port+=VIRTUAL_SERVER.entry[i].lan_port[j].b_port;else
lan_port+=VIRTUAL_SERVER.entry[i].lan_port[j].b_port+"-"+VIRTUAL_SERVER.entry[i].lan_port[j].e_port;}
service_name=VIRTUAL_SERVER.entry[i].service_name;document.writeln('<TR>');document.writeln('<TD colspan="1">',i+1,'');document.writeln('<input type="checkbox" class="margin-rows" name="enable',i,'" value="',VIRTUAL_SERVER.entry[i].enable,'"',enable,'>');document.writeln('</TD>');document.writeln('<TD colspan="1">');document.writeln('<INPUT size="12" type="text" maxlength="40" class="input-text csmall" name="service_name',i,'" value="',service_name,'">');document.writeln('</TD>');document.writeln('<TD colspan="1">');document.writeln('<INPUT size="12" type="text" class="input-text csmall" maxlength="40" name="wan_port',i,'" value="',wan_port,'">');document.writeln('</TD>');document.writeln('<TD colspan="1">');document.writeln('<SELECT name="protocol'+i+'" class="input-text">');document.writeln('<OPTION value=6>TCP</OPTION>');document.writeln('<OPTION value=17>UDP</OPTION>');document.writeln('<OPTION value=255>TCP&UDP</OPTION>');document.writeln('</SELECT>');document.writeln('</TD>');document.writeln('<TD');document.writeln('<INPUT size="15" type="hidden" maxlength="25" name="wan_ip'+i+'" value="*">');document.writeln('<span class="drop-ip">'+lanip_oct1+'.'+lanip_oct2+'.'+lanip_oct3+'.<INPUT size="3" type="text" class="input-text xsmall" maxlength="3" name="lan_ip',i,'" value="',lan_ip,'"></span>');document.writeln('</TD>');document.writeln('<TD colspan="1">');document.writeln('<INPUT size="12" type="text" class="input-text csmall" maxlength="40" name="lan_port',i,'" value="',lan_port,'">');document.writeln('</TD>');document.writeln('</TR>');if(bBothProto)
protocol=255;field_name="protocol"+i;k=document.getElementsByName("protocol"+i);for(j=0;j<3;j++)
{if(k[0].options[j].value==protocol)
{k[0].options[j].selected=true;break;}}}</script> </tbody> </table> </div><div id="div_catch"></div> </p></div></div><br><a href="#save"class="nice radius large green button"onClick="return evaltF()"id="dnsapply">Save</a>&nbsp;&nbsp;</form></div><div class="sidebar four columns"> <div><h6><span>What is port forwarding? </span></h6> <p> <span>Port forwarding allows remote computers to connect to a specific program or service on your local network. For example, you would use port forwarding to run a web server (port 80) on your network.  Most modern programs do not require you to use port forwarding; They can set up any ports they needs automatically. </span> <span class="nub"></span></p> </div> </div><div class="column-row hide-on-desktops"> <div class="sixteen columns"> <ul class="sub-nav"id="mob_sub_nav"></ul> </div> </div></div> </div><script src="main_footer.js"></script><script>function init(){ShowNavMenu();}</script>